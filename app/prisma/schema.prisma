// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AppUser {
  id          Int        @id @default(autoincrement())
  email       String     @unique
  password    String
  firstName   String
  lastName    String
  phoneNumber String
  role        String
  shelter     Shelter    @relation(fields: [shelterId], references: [id])
  shelterId   Int
  adoptions   Adoption[]
  messages    Message[]
}

model Shelter {
  id        Int        @id @default(autoincrement())
  name      String
  address   String
  workers   AppUser[]
  adoptions Adoption[]
}

model Adoption {
  id             Int             @id @default(autoincrement())
  animalId       Int
  animalName     String
  clientName     String
  clientSurname  String  @default("")
  clientContact  String  @default("")
  stages         AdoptionStage[]
  assignedWorker AppUser?        @relation(fields: [userId], references: [id])
  userId         Int
  isFinished     Boolean         @default(false)
  shelter        Shelter?        @relation(fields: [shelterId], references: [id])
  shelterId      Int?
  createdAt  DateTime   @default(now())
}

model AdoptionStage {
  id           Int      @id @default(autoincrement())
  description  String
  name         String
  dateFinished String
  isFinished   Boolean  @default(false)
  adoption     Adoption @relation(fields: [adoptionId], references: [id])
  adoptionId   Int
}

model Message{
  id                   Int @id @default(autoincrement())
  date                 DateTime @default(now())
  petId                Int
  petName              String
  candidateFirstName   String
  candidateLastName    String
  candidateContactInfo String
  isFinished           Boolean @default(false)
  worker               AppUser? @relation(fields: [workerId], references: [id])
  workerId             Int?
  message              String
}